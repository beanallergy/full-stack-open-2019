{"version":3,"sources":["components/PhonebookItem.js","components/NewInput.js","components/NewPersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PhonebookItem","_ref","item","deleteItemHandler","react_default","a","createElement","onClick","NewInput","label","newValue","setNewValue","value","onChange","event","target","NewPersonForm","newName","setNewName","newNumber","setNewNumber","newPersonFormHandler","onSubmit","components_NewInput","type","Notification","message","successful","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Header","name","App","props","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","filter","setFilter","_useState9","_useState10","notiMsg","setNotiMsg","_useState11","_useState12","setSuccess","setNotification","msg","setTimeout","useEffect","personService","initialPersons","catch","error","console","log","deletePersonHandler","person","nameToRemove","indexToRemove","window","confirm","remain","updateExistingPerson","number","existing","find","updatedId","updatedContent","objectSpread","returnedPerson","map","addNewPerson","returnedPersons","App_Header","components_Notification","components_NewPersonForm","preventDefault","includes","toString","toLowerCase","components_PhonebookItem","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"wLAQeA,EANO,SAAAC,GAA+B,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,kBAC5B,OACEC,EAAAC,EAAAC,cAAA,SAAIJ,EAAI,KAAR,IAAmBA,EAAI,OAAvB,IAAmCE,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMJ,EAAkBD,KAAzC,UAAnC,MCSWM,EAXE,SAAAP,GAAoC,IAAlCQ,EAAkCR,EAAlCQ,MAAOC,EAA2BT,EAA3BS,SAAUC,EAAiBV,EAAjBU,YAKlC,OACEP,EAAAC,EAAAC,cAAA,WACGG,EADH,KACWL,EAAAC,EAAAC,cAAA,SAAOM,MAAOF,EAAUG,SANhB,SAACC,GACpBH,EAAYG,EAAMC,OAAOH,YCWdI,EAZO,SAAAf,GAA0E,IAAxEgB,EAAwEhB,EAAxEgB,QAASC,EAA+DjB,EAA/DiB,WAAYC,EAAmDlB,EAAnDkB,UAAWC,EAAwCnB,EAAxCmB,aAAcC,EAA0BpB,EAA1BoB,qBACpE,OACEjB,EAAAC,EAAAC,cAAA,QAAMgB,SAAUD,GACdjB,EAAAC,EAAAC,cAACiB,EAAD,CAAUd,MAAM,OAAOC,SAAUO,EAASN,YAAaO,IACvDd,EAAAC,EAAAC,cAACiB,EAAD,CAAUd,MAAM,SAASC,SAAUS,EAAWR,YAAaS,IAC3DhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,UAAb,UC+BOC,EAtCM,SAAAxB,GAA2B,IAAzByB,EAAyBzB,EAAzByB,QAASC,EAAgB1B,EAAhB0B,WAqB9B,OAAgB,OAAZD,EAA+B,UAAZA,EAA8B,KAEhDC,EAQDvB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,aAAaC,MApBR,CACtBC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAcTV,GAPHtB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,WAAWC,MAxBR,CACpBC,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAkBTV,oBC3BHW,EAAU,oCAsBDC,EApBA,WAEb,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB5BL,EAfA,SAAAM,GAEb,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAACQ,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,GAAAC,OAAaX,EAAb,KAAAW,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BL,EALA,SAAAQ,GAEb,OADgBP,IAAMU,OAAN,GAAAD,OAAgBX,EAAhB,KAAAW,OAA2BF,IAC5BL,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCbrCO,EAAS,SAAAjD,GAAY,IAAVkD,EAAUlD,EAAVkD,KACf,OACE/C,EAAAC,EAAAC,cAAA,UAAK6C,IA2GMC,EAvGH,SAACC,GAAU,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACJI,EADIJ,EAAA,GAAAK,EAEWN,mBAAS,IAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEb5C,EAFa6C,EAAA,GAEJ5C,EAFI4C,EAAA,GAAAC,EAGeR,mBAAS,IAHxBS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGb5C,EAHa6C,EAAA,GAGF5C,EAHE4C,EAAA,GAAAC,EAISV,mBAAS,IAJlBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAIbE,EAJaD,EAAA,GAILE,EAJKF,EAAA,GAAAG,EAKWd,mBAAS,SALpBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAKbE,EALaD,EAAA,GAKJE,EALIF,EAAA,GAAAG,EAMclB,oBAAS,GANvBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAMb9C,EANa+C,EAAA,GAMDC,EANCD,EAAA,GAiBfE,EAAkB,SAACC,GACvBL,EAAWK,GACXC,WAAW,WAAON,EAAW,OAAQ,MAGvCO,oBAAU,WACRC,IAEKvC,KAAK,SAAAwC,GACJrB,EAAWqB,KAEdC,MAAM,SAAAC,GAAWC,QAAQC,IAAI,4BAA6BF,MAC5D,IAEH,IAAMG,EAAsB,SAACC,GAC3B,IAAMC,EAAeD,EAAM,KACrBE,EAAgBF,EAAM,GACZG,OAAOC,QAAP,UAAA3C,OAAyBwC,EAAzB,OAEdR,EACUS,GACLhD,KAAK,WACJmB,EAAWD,EAAQQ,OAAQ,SAAAyB,GAAM,OAAIA,EAAO9C,KAAO2C,KACnDb,EAAe,GAAA5B,OAAIwC,EAAJ,eAElBN,MAAM,SAAAC,GAAWC,QAAQC,IAAI,kBAAmBF,MAYjDU,EAAuB,SAAC1C,EAAM2C,GAElC,GADgBJ,OAAOC,QAAP,GAAA3C,OAAkBG,EAAlB,2EACD,CACb,IAAM4C,EAAWpC,EAAQqC,KAAK,SAAAT,GAAM,OAAIA,EAAOpC,OAASA,IAClD8C,EAAYF,EAAQ,GACpBG,EAAczC,OAAA0C,EAAA,EAAA1C,CAAA,GAAOsC,EAAP,CAAiB5C,KAAQA,EAAM2C,OAAUA,IAC7Dd,EACUiB,EAAWC,GAChBzD,KAAK,SAAA2D,GACJxC,EAAWD,EAAQ0C,IAAI,SAAAd,GAAM,OAAIA,EAAOzC,KAAOmD,EAAYV,EAASa,KACpExB,EAAe,aAAA5B,OAAcG,EAAd,wBAEhB+B,MAAM,SAAAC,GACLC,QAAQC,IAAI,6BAA8BF,GAC1CP,EAAe,kBAAA5B,OAAmBG,EAAnB,0CACfwB,GAAW,OAKf2B,EAAe,SAACnD,EAAM2C,GAK1Bd,EAJkB,CAChB7B,KAAQA,EACR2C,OAAUA,IAIPrD,KAAK,SAAA8D,GACJ3C,EAAWD,EAAQX,OAAOuD,IAC1B3B,EAAe,SAAA5B,OAAUG,MAE5B+B,MAAM,SAAAC,GAAWC,QAAQC,IAAI,2BAA4BF,MAG9D,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkG,EAAD,CAAQrD,KAAK,cACb/C,EAAAC,EAAAC,cAACmG,EAAD,CAAc/E,QAAS6C,EAAS5C,WAAYA,IAC5CvB,EAAAC,EAAAC,cAACiB,EAAD,CAAUd,MAAM,oBAAoBG,MAAOuD,EAAQxD,YAAayD,IAEhEhE,EAAAC,EAAAC,cAACkG,EAAD,CAAQrD,KAAK,cACb/C,EAAAC,EAAAC,cAACoG,EAAD,CAAezF,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EAAcC,qBAjDlF,SAACP,GAC5BA,EAAM6F,iBACMhD,EAAQ0C,IAAI,SAAAd,GAAM,OAAIA,EAAM,OAClCqB,SAAS3F,GACX4E,EAAqB5E,EAAUE,GAC/BmF,EAAarF,EAAUE,MA8CzBf,EAAAC,EAAAC,cAACkG,EAAD,CAAQrD,KAAK,YAvFbQ,EAAQQ,OAAO,SAAAoB,GAAM,OACnBA,EAAM,KAASsB,WAAWC,cACzBF,SAASzC,EAAO0C,WAAWC,iBAsFdT,IAAI,SAACd,GAAD,OAAYnF,EAAAC,EAAAC,cAACyG,EAAD,CAAeC,IAAKzB,EAAM,KAAUrF,KAAMqF,EAAQpF,kBAAmBmF,QC3G3G2B,IAASC,OACP9G,EAAAC,EAAAC,cAAC6G,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.9e7266da.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PhonebookItem = ({item, deleteItemHandler}) => {\r\n  return (\r\n    <p>{item['name']} {item['number']} <button onClick={() => deleteItemHandler(item)}>delete</button> </p>\r\n  )\r\n}\r\n\r\nexport default PhonebookItem","import React from 'react'\r\n\r\nconst NewInput = ({label, newValue, setNewValue}) => {\r\n  const handleChange = (event) => {\r\n    setNewValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {label}: <input value={newValue} onChange={handleChange}/>\r\n    </div>\r\n  )\r\n}\r\nexport default NewInput ","import React from 'react'\r\nimport NewInput from './NewInput'\r\n\r\nconst NewPersonForm = ({newName, setNewName, newNumber, setNewNumber, newPersonFormHandler}) => {\r\n  return (\r\n    <form onSubmit={newPersonFormHandler}>\r\n      <NewInput label='name' newValue={newName} setNewValue={setNewName} />\r\n      <NewInput label='number' newValue={newNumber} setNewValue={setNewNumber} />\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewPersonForm ","import React from 'react'\r\n\r\nconst Notification = ({message, successful}) => {\r\n  const errorMsgStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  const successMsgStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  if (message === null | message === 'Hello') { return null }\r\n\r\n  if (!successful) {\r\n    return (\r\n      <div className=\"errorMsg\" style={errorMsgStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"successMsg\" style={successMsgStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport PhonebookItem from './components/PhonebookItem'\r\nimport NewPersonForm from './components/NewPersonForm'\r\nimport NewInput from './components/NewInput'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst Header = ({name}) => {\r\n  return (\r\n    <h2>{name}</h2>\r\n  )\r\n}\r\n\r\nconst App = (props) => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ notiMsg, setNotiMsg ] = useState('Hello')\r\n  const [ successful, setSuccess ] = useState(true)\r\n\r\n  const filterPeople = () => {\r\n    return ( \r\n      persons.filter(person =>\r\n        person['name'].toString().toLowerCase()\r\n        .includes(filter.toString().toLowerCase())\r\n      )\r\n    )\r\n  }\r\n\r\n  const setNotification = (msg) => {\r\n    setNotiMsg(msg)\r\n    setTimeout(() => {setNotiMsg(null)}, 2000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)\r\n      })\r\n      .catch(error => { console.log('GET initial data failed: ', error) })\r\n  }, [])\r\n\r\n  const deletePersonHandler = (person) => {\r\n    const nameToRemove = person['name']\r\n    const indexToRemove = person['id']\r\n    let confirmed = window.confirm(`Delete ${nameToRemove}?`)\r\n    if (confirmed) {\r\n      personService\r\n        .remove(indexToRemove)\r\n          .then(() => {\r\n            setPersons(persons.filter((remain => remain.id !== indexToRemove)))\r\n            setNotification(`${nameToRemove} deleted`)\r\n          })\r\n        .catch(error => { console.log('DELETE failed: ', error) })\r\n    }\r\n  }\r\n\r\n  const newPersonFormHandler = (event) => {\r\n    event.preventDefault()\r\n    let names = persons.map(person => person['name'])\r\n    names.includes(newName)\r\n      ? updateExistingPerson(newName , newNumber)\r\n      : addNewPerson(newName , newNumber)\r\n  }\r\n\r\n  const updateExistingPerson = (name, number) => {\r\n    let confirmed = window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)\r\n    if (confirmed) {\r\n      const existing = persons.find(person => person.name === name)\r\n      const updatedId = existing['id']\r\n      const updatedContent = {...existing, 'name': name, 'number': number}\r\n      personService\r\n        .update(updatedId, updatedContent)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== updatedId ? person : returnedPerson))\r\n            setNotification(`Number of ${name} has been changed`)\r\n          })\r\n          .catch(error => { \r\n            console.log('PUT update person failed: ', error)\r\n            setNotification(`Information of ${name} has already been removed from server`)\r\n            setSuccess(false)\r\n          })\r\n    }\r\n  }\r\n\r\n  const addNewPerson = (name, number) => {\r\n    const newPerson = {\r\n      'name': name ,\r\n      'number': number\r\n    }\r\n    personService\r\n      .create(newPerson)\r\n        .then(returnedPersons => { \r\n          setPersons(persons.concat(returnedPersons))\r\n          setNotification(`Added ${name}`)\r\n        })\r\n      .catch(error => { console.log('POST new person failed: ', error) })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header name='Phonebook' />\r\n      <Notification message={notiMsg} successful={successful} />\r\n      <NewInput label='filter shown with' value={filter} setNewValue={setFilter} />\r\n\r\n      <Header name='add a new' />\r\n      <NewPersonForm newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} newPersonFormHandler={newPersonFormHandler} />\r\n\r\n      <Header name='Numbers' />\r\n      {filterPeople().map((person) => <PhonebookItem key={person['name']} item={person} deleteItemHandler={deletePersonHandler} /> )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'  \r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}